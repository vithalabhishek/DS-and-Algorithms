https://leetcode.com/problems/majority-element/

https://www.youtube.com/watch?v=AoX3BPWNnoE&list=PLgUwDviBIf0rPG3Ictpu74YWBQ1CaBkm2&index=15

HashMap Solution :

class Solution {
    public int majorityElement(int[] nums) {
        HashMap<Integer,Integer> map = new HashMap<Integer,Integer>();
        int answer = 0;
        if(nums.length == 1) answer = nums[0];
        for(int i = 0; i < nums.length; i++) {
            if (map.containsKey(nums[i])) {
                    int count = map.get(nums[i]) +1;
                    if (count > nums.length/2) {
                        answer = nums[i];
                    }
                    else
                        map.put(nums[i], count);
            }
            else
                map.put(nums[i],1);
        }
        return answer;
    }
}

Solution:

class Solution {
    public int majorityElement(int[] nums) {
        // floor of n/2 times
        //Moore's Voting Algorithm
        int count = 0;
        int element = 0;
        for(int num : nums){
            if(count == 0)
                element = num;
            if(element == num)
                count +=1 ;
            else
                count -=1 ;
        }
        return element;
    }
}
